<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile>HILFE.LSP.Server/HILFE.LSP.Server.csproj</projectFile>
    <projectFile>HILFE/HILFE.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="00c2beb1-247c-4bc1-9362-0442ce17233a" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/.idea.HILFE/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.STEP/.idea/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.STEP/.idea/codeStyles/Project.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.STEP/.idea/codeStyles/codeStyleConfig.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.STEP/.idea/discord.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.STEP/.idea/encodings.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.STEP/.idea/indexLayout.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.STEP/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.STEP/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/STEP.sln.DotSettings" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.HILFE/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.HILFE/.idea/codeStyles/Project.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.HILFE/.idea/codeStyles/codeStyleConfig.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.HILFE/.idea/discord.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.HILFE/.idea/encodings.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.HILFE/.idea/indexLayout.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.HILFE/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.HILFE/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.run/HILFE REPL.run.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.run/HILFE REPL.run.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.run/HILFE assignment.hil.run.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.run/HILFE assignment.hil.run.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.run/HILFE branching.hil.run.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.run/HILFE branching.hil.run.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.run/HILFE call.hil.run.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.run/HILFE call.hil.run.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.run/HILFE example.hil.run.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.run/HILFE example.hil.run.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.run/HILFE expressions.hil.run.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.run/HILFE expressions.hil.run.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.run/HILFE fibonacci.hil.run.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.run/HILFE fibonacci.hil.run.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.run/HILFE functions.hil.run.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.run/HILFE functions.hil.run.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.run/HILFE help.run.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.run/HILFE help.run.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.run/HILFE json.hil.run.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.run/HILFE json.hil.run.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.run/HILFE lists.hil.run.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.run/HILFE lists.hil.run.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.run/HILFE looping.hil.run.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.run/HILFE looping.hil.run.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.run/HILFE scoped.hil.run.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.run/HILFE scoped.hil.run.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Assembly.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Assembly.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Examples/branching.hil.in" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Examples/branching.hil.in" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Examples/branching.hil.out" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Examples/branching.hil.out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Examples/call.hil.in" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Examples/call.hil.in" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Examples/call.hil.out" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Examples/call.hil.out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Examples/example.hil.in" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Examples/example.hil.in" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Examples/example.hil.out" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Examples/example.hil.out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Examples/expressions.hil.out" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Examples/expressions.hil.out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Examples/functions.hil.out" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Examples/functions.hil.out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Examples/json.hil.out" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Examples/json.hil.out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Examples/lists.hil.out" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Examples/lists.hil.out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Examples/looping.hil.out" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Examples/looping.hil.out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Examples/maps.hil.out" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Examples/maps.hil.out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Examples/scoped.hil.out" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Examples/scoped.hil.out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Framework/Conversion/ParseFunctionTest.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Framework/Conversion/ParseFunctionTest.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Framework/Reflection/TypenameFunctionTest.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Framework/Reflection/TypenameFunctionTest.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/HILFE.Tests.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/STEP.Tests.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Integration/ExamplesIntegrationTest.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Integration/ExamplesIntegrationTest.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Interpreting/ScopeTest.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Interpreting/ScopeTest.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Parsing/ExpressionParserTest.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Parsing/ExpressionParserTest.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Parsing/ParserTest.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Parsing/ParserTest.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Parsing/TokenQueueTest.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Parsing/TokenQueueTest.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Tokenizing/TokenizerTest.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Tokenizing/TokenizerTest.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.Tests/Usings.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.Tests/Usings.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE.sln" beforeDir="false" afterPath="$PROJECT_DIR$/STEP.sln" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Assembly.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Assembly.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Examples/assignment.hil" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Examples/assignment.hil" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Examples/branching.hil" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Examples/branching.hil" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Examples/call.hil" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Examples/call.hil" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Examples/example.hil" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Examples/example.hil" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Examples/expressions.hil" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Examples/expressions.hil" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Examples/fibonacci.hil" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Examples/fibonacci.hil" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Examples/functions.hil" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Examples/functions.hil" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Examples/json.hil" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Examples/json.hil" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Examples/lists.hil" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Examples/lists.hil" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Examples/looping.hil" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Examples/looping.hil" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Examples/maps.hil" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Examples/maps.hil" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Examples/scoped.hil" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Examples/scoped.hil" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Framework/Conversion/ExpressionResultJsonConverter.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Framework/Conversion/ExpressionResultJsonConverter.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Framework/Conversion/JsonDecodeFunction.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Framework/Conversion/JsonDecodeFunction.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Framework/Conversion/JsonEncodeFunction.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Framework/Conversion/JsonEncodeFunction.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Framework/Conversion/ParseFunction.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Framework/Conversion/ParseFunction.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Framework/IO/PrintFunction.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Framework/IO/PrintFunction.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Framework/IO/PrintlnFunction.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Framework/IO/PrintlnFunction.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Framework/IO/ReadlineFunction.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Framework/IO/ReadlineFunction.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Framework/NativeFunction.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Framework/NativeFunction.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Framework/Reflection/TypenameFunction.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Framework/Reflection/TypenameFunction.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/HILFE.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/STEP.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Interpreting/IncompatibleTypesException.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Interpreting/IncompatibleTypesException.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Interpreting/Interpreter.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Interpreting/Interpreter.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Interpreting/InterpreterException.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Interpreting/InterpreterException.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Interpreting/InvalidArgumentCountException.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Interpreting/InvalidArgumentCountException.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Interpreting/InvalidDepthResult.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Interpreting/InvalidDepthResult.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Interpreting/InvalidExpressionTypeException.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Interpreting/InvalidExpressionTypeException.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Interpreting/InvalidResultTypeException.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Interpreting/InvalidResultTypeException.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Interpreting/ListIndexOutOfRangeException.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Interpreting/ListIndexOutOfRangeException.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Interpreting/Scope.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Interpreting/Scope.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Interpreting/UndefinedIdentifierException.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Interpreting/UndefinedIdentifierException.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Interpreting/Variable.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Interpreting/Variable.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/BinaryExpressionOperator.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/BinaryExpressionOperator.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Expressions/BinaryExpression.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Expressions/BinaryExpression.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Expressions/ConstantExpression.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Expressions/ConstantExpression.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Expressions/DirectFunctionDefinitionCallExpression.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Expressions/DirectFunctionDefinitionCallExpression.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Expressions/Expression.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Expressions/Expression.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Expressions/ExpressionEvaluationExtensions.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Expressions/ExpressionEvaluationExtensions.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Expressions/ExpressionParser.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Expressions/ExpressionParser.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Expressions/ExpressionResult.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Expressions/ExpressionResult.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Expressions/FunctionDefinition.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Expressions/FunctionDefinition.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Expressions/FunctionDefinitionExpression.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Expressions/FunctionDefinitionExpression.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Expressions/IdentifierFunctionCallExpression.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Expressions/IdentifierFunctionCallExpression.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Expressions/InvalidIndexOperatorException.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Expressions/InvalidIndexOperatorException.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Expressions/ListExpression.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Expressions/ListExpression.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Expressions/MapExpression.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Expressions/MapExpression.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Expressions/UnaryExpression.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Expressions/UnaryExpression.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Expressions/UserDefinedFunctionDefinition.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Expressions/UserDefinedFunctionDefinition.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Expressions/VariableExpression.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Expressions/VariableExpression.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/ParserException.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/ParserException.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Statements/AnonymousCodeBlockStatement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Statements/AnonymousCodeBlockStatement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Statements/BreakStatement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Statements/BreakStatement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Statements/ContinueStatement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Statements/ContinueStatement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Statements/DiscardAssignmentStatement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Statements/DiscardAssignmentStatement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Statements/FunctionCallStatement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Statements/FunctionCallStatement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Statements/IEnumerable`Token`Extensions.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Statements/IEnumerable`Token`Extensions.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Statements/IfElseStatement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Statements/IfElseStatement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Statements/IfStatement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Statements/IfStatement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Statements/IndexAssignmentStatement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Statements/IndexAssignmentStatement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Statements/ReturnStatement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Statements/ReturnStatement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Statements/Statement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Statements/Statement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Statements/StatementParser.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Statements/StatementParser.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Statements/StatementType.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Statements/StatementType.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Statements/VariableAssignmentStatement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Statements/VariableAssignmentStatement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Statements/VariableDeclarationStatement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Statements/VariableDeclarationStatement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/Statements/WhileStatement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/Statements/WhileStatement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/TokenQueue.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/TokenQueue.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/UnexpectedEndOfInputException.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/UnexpectedEndOfInputException.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Parsing/UnexpectedTokenException.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Parsing/UnexpectedTokenException.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Program.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Program.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Tokenizing/CharacterQueue.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Tokenizing/CharacterQueue.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Tokenizing/StringExtensions.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Tokenizing/StringExtensions.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Tokenizing/Token.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Tokenizing/Token.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Tokenizing/TokenType.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Tokenizing/TokenType.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Tokenizing/Tokenizer.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Tokenizing/Tokenizer.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/HILFE/Tokenizing/TokenizerException.cs" beforeDir="false" afterPath="$PROJECT_DIR$/STEP/Tokenizing/TokenizerException.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CoverageOptionsProvider">
    <option name="myAddOrReplace" value="0" />
    <option name="myActivateViewOnRun" value="false" />
  </component>
  <component name="Git.Settings">
    <option name="PUSH_AUTO_UPDATE" value="true" />
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="maps" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="UPDATE_TYPE" value="REBASE" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$USER_HOME$/AppData/Local/JetBrains/Shared/vAny/SourcesCache/ad3655ccccf6e61eb6651b7ec77b3e67a2858b4abf7f204c601bad7941d53b/ToAsyncEnumerable.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/STEP/Interpreting/Interpreter.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/STEP/Program.cs" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="Toolset" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2DPUsEBd3oFalxzcsiL3fNPAHOh" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <OptionsSetting value="false" id="Update" />
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "XThreadsFramesViewSplitterKey": "0.84126985",
    "git-widget-placeholder": "main",
    "ignore.virus.scanning.warn.message": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.fileTypes",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "rider.external.source.directories": [
      "C:\\Users\\ricar\\AppData\\Local\\JetBrains\\Shared\\vAny\\DecompilerCache",
      "C:\\Users\\ricar\\AppData\\Local\\JetBrains\\Shared\\vAny\\SourcesCache",
      "C:\\Users\\ricar\\AppData\\Local\\Symbols\\src"
    ]
  }
}]]></component>
  <component name="RunManager" selected=".NET Project.HILFE fibonacci.hil">
    <configuration name="HILFE branching.hil" type="DotNetProject" factoryName=".NET Project">
      <option name="EXE_PATH" value="$PROJECT_DIR$/HILFE/bin/Debug/net7.0/HILFE.exe" />
      <option name="PROGRAM_PARAMETERS" value="run branching.hil" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/HILFE/bin/Debug/net7.0" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="PROJECT_PATH" value="$PROJECT_DIR$/HILFE/HILFE.csproj" />
      <option name="PROJECT_EXE_PATH_TRACKING" value="1" />
      <option name="PROJECT_ARGUMENTS_TRACKING" value="1" />
      <option name="PROJECT_WORKING_DIRECTORY_TRACKING" value="1" />
      <option name="PROJECT_KIND" value="DotNetCore" />
      <option name="PROJECT_TFM" value="net7.0" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="HILFE expressions.hil" type="DotNetProject" factoryName=".NET Project">
      <option name="EXE_PATH" value="$PROJECT_DIR$/HILFE/bin/Debug/net7.0/HILFE.exe" />
      <option name="PROGRAM_PARAMETERS" value="run expressions.hil" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/HILFE/bin/Debug/net7.0" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="PROJECT_PATH" value="$PROJECT_DIR$/HILFE/HILFE.csproj" />
      <option name="PROJECT_EXE_PATH_TRACKING" value="1" />
      <option name="PROJECT_ARGUMENTS_TRACKING" value="1" />
      <option name="PROJECT_WORKING_DIRECTORY_TRACKING" value="1" />
      <option name="PROJECT_KIND" value="DotNetCore" />
      <option name="PROJECT_TFM" value="net7.0" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="HILFE maps.hil" type="DotNetProject" factoryName=".NET Project">
      <option name="EXE_PATH" value="$PROJECT_DIR$/HILFE/bin/Debug/net7.0/HILFE.exe" />
      <option name="PROGRAM_PARAMETERS" value="run Examples/maps.hil" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/HILFE/bin/Debug/net7.0" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="PROJECT_PATH" value="$PROJECT_DIR$/STEP/STEP.csproj" />
      <option name="PROJECT_EXE_PATH_TRACKING" value="1" />
      <option name="PROJECT_ARGUMENTS_TRACKING" value="1" />
      <option name="PROJECT_WORKING_DIRECTORY_TRACKING" value="1" />
      <option name="PROJECT_KIND" value="DotNetCore" />
      <option name="PROJECT_TFM" value="net7.0" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="HILFE.LSP.Server" type="DotNetProject" factoryName=".NET Project">
      <option name="EXE_PATH" value="" />
      <option name="PROGRAM_PARAMETERS" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="PROJECT_PATH" value="$PROJECT_DIR$/HILFE.LSP.Server/HILFE.LSP.Server.csproj" />
      <option name="PROJECT_EXE_PATH_TRACKING" value="1" />
      <option name="PROJECT_ARGUMENTS_TRACKING" value="1" />
      <option name="PROJECT_WORKING_DIRECTORY_TRACKING" value="1" />
      <option name="PROJECT_KIND" value="Unloaded" />
      <option name="PROJECT_TFM" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <list>
      <item itemvalue=".NET Project.HILFE lists.hil" />
      <item itemvalue=".NET Project.HILFE maps.hil" />
      <item itemvalue=".NET Project.HILFE json.hil" />
      <item itemvalue=".NET Project.HILFE.LSP.Server" />
      <item itemvalue=".NET Project.HILFE assignment.hil" />
      <item itemvalue=".NET Project.HILFE call.hil" />
      <item itemvalue=".NET Project.HILFE help" />
      <item itemvalue=".NET Project.HILFE REPL" />
      <item itemvalue=".NET Project.HILFE example.hil" />
      <item itemvalue=".NET Project.HILFE branching.hil" />
      <item itemvalue=".NET Project.HILFE expressions.hil" />
      <item itemvalue=".NET Project.HILFE functions.hil" />
      <item itemvalue=".NET Project.HILFE fibonacci.hil" />
      <item itemvalue=".NET Project.HILFE scoped.hil" />
      <item itemvalue=".NET Project.HILFE looping.hil" />
      <item itemvalue="Publish to folder.Publish" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SvnConfiguration">
    <configuration>C:\Users\ricar\AppData\Roaming\Subversion</configuration>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnitTestsCoverage.Settings">
    <option name="coveragePercentColumnWidth" value="124" />
    <option name="sortOrder" value="DESCENDING" />
    <option name="sortedColumn" value="1" />
    <option name="symbolColumnWidth" value="836" />
    <coverage-tree-state>
      <expand />
      <select />
    </coverage-tree-state>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="Update run configurations, implement break and continue" />
    <MESSAGE value="Updated example in README" />
    <MESSAGE value="Fix number parsing in tokenizer" />
    <MESSAGE value="Remove old interpolation idea" />
    <MESSAGE value="Refactor framework functions into different namespaces" />
    <MESSAGE value="Created common class for native functions" />
    <MESSAGE value="Use invariant culture to convert values to string" />
    <MESSAGE value="Only look in current scope when setting a variable value" />
    <MESSAGE value="Improved conversion from ExpressionResult to JSON and vice versa" />
    <MESSAGE value="Added exclude from coverage attribute to DebugParamsString" />
    <MESSAGE value="Use string helper from expression result" />
    <MESSAGE value="Make expression result constructor private to prevent inconsistent behaviour" />
    <MESSAGE value="Renamed array to list" />
    <MESSAGE value="Added index access to lists" />
    <MESSAGE value="WIP map type" />
    <MESSAGE value="Implemented map type" />
    <MESSAGE value="Fixed missing last pair in map error and added support for nested maps" />
    <MESSAGE value="Added support for accessing members of a map" />
    <MESSAGE value="Implemented index assignments for maps" />
    <MESSAGE value="Implemented map &lt;-&gt; object mapping to and from JSON" />
    <MESSAGE value="Added new keyword to indicate intentional value overwrite" />
    <MESSAGE value="Fix rendering of map values" />
    <MESSAGE value="Fix typo in UserDefinedFunctionDefinition class name" />
    <MESSAGE value="Fixed issue with function parameter evaluation and scopes. Also fixed return value propagation for if statements" />
    <MESSAGE value="Add MIT to license title" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" suspend="NONE" type="DotNet Exception Breakpoints">
          <properties exception="HILFE.Tokenizing.TokenizerException" displayValue="TokenizerException" namespaceName="HILFE.Tokenizing" />
          <option name="timeStamp" value="31" />
        </breakpoint>
        <breakpoint enabled="true" suspend="NONE" type="DotNet Exception Breakpoints">
          <properties exception="HILFE.Parsing.UnexpectedTokenException" displayValue="UnexpectedTokenException" namespaceName="HILFE.Parsing" />
          <option name="timeStamp" value="32" />
        </breakpoint>
        <breakpoint enabled="true" suspend="NONE" type="DotNet Exception Breakpoints">
          <properties exception="HILFE.Parsing.ParserException" displayValue="ParserException" namespaceName="HILFE.Parsing" />
          <option name="timeStamp" value="36" />
        </breakpoint>
        <breakpoint enabled="true" suspend="NONE" type="DotNet Exception Breakpoints">
          <properties exception="System.MissingMethodException" isInternal="false" displayValue="MissingMethodException" namespaceName="System">
            <option name="internal" value="false" />
          </properties>
          <option name="timeStamp" value="41" />
        </breakpoint>
        <breakpoint enabled="true" suspend="NONE" type="DotNet Exception Breakpoints">
          <properties exception="System.Threading.Tasks.TaskCanceledException" isInternal="false" displayValue="TaskCanceledException" namespaceName="System.Threading.Tasks">
            <option name="internal" value="false" />
          </properties>
          <option name="timeStamp" value="49" />
        </breakpoint>
        <breakpoint enabled="true" suspend="NONE" type="DotNet Exception Breakpoints">
          <properties exception="Xunit.Sdk.EqualException" isInternal="false" displayValue="EqualException" namespaceName="Xunit.Sdk">
            <option name="internal" value="false" />
          </properties>
          <option name="timeStamp" value="82" />
        </breakpoint>
        <breakpoint enabled="true" suspend="NONE" type="DotNet Exception Breakpoints">
          <properties exception="HILFE.Interpreting.IncompatibleTypesException" displayValue="IncompatibleTypesException" namespaceName="HILFE.Interpreting" />
          <option name="timeStamp" value="91" />
        </breakpoint>
        <line-breakpoint enabled="true" type="DotNet Breakpoints">
          <url>file://$PROJECT_DIR$/STEP/Parsing/Expressions/ExpressionParser.cs</url>
          <line>155</line>
          <properties documentPath="S:\repos\ricardoboss\HILFE\HILFE\Parsing\Expressions\ExpressionParser.cs" initialLine="80" containingFunctionPresentation="Method 'ParseBinaryExpression'">
            <startOffsets>
              <option value="2947" />
            </startOffsets>
            <endOffsets>
              <option value="3004" />
            </endOffsets>
          </properties>
          <option name="timeStamp" value="48" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint enabled="true" type="DotNet Exception Breakpoints" />
      </default-breakpoints>
    </breakpoint-manager>
  </component>
</project>